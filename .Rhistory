modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
rm(modfiles)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
res <- list() #this is for the results
pred <- list() # this is for the raster model results
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
View(pred)
rm(modfiles)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
library(sp)
library(rgdal)
library(raster)
library(dplyr)
library(rgeos)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
res <- list() #this is for the results
pred <- list() # this is for the raster model results
for(i in seq_along(modfiles)){
mod <- readRDS(modfiles[i])
res[[i]] <- mod@results[which(mod@results$cbi.trains==max(mod@results$cbi.train))]
pred[[i]] <- mod@predictions[[which(mod@results$cbi.train==max(mod@results$cbi.train))]]
}
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
a
modfiles <- list.files("results/2022-12-07_ENMeval_results" , full.names = T)
modfiles <- list.files("results/2022-12-07_ENMeval_results" , full.names = T)
for(i in seq_along(modfiles)){
mod <- readRDS(modfiles[i])
res[[i]] <- mod@results[which(mod@results$cbi.trains==max(mod@results$cbi.train))]
pred[[i]] <- mod@predictions[[which(mod@results$cbi.train==max(mod@results$cbi.train))]]
}
res <- list() #this is for the results
pred <- list() # this is for the raster model results
for(i in seq_along(modfiles)){
mod <- readRDS(modfiles[i])
res[[i]] <- mod@results[which(mod@results$cbi.trains==max(mod@results$cbi.train))]
pred[[i]] <- mod@predictions[[which(mod@results$cbi.train==max(mod@results$cbi.train))]]
}
results/2022-12-07_ENMeval_results
modfiles <- list.files("results/2022-12-07_ENMeval_results" , full.names = T)
# LOAD ENVIRONMENTAL PREDICTOR VARIABLES
envs <- stack(list.files("Data/Derived/envs", full.names = TRUE))
#LOAD OCCURENCES RECORD AND FILTER
load("Data/FINAL_RECS.Rdata")
modfiles <- list.files("results/2022-12-07_ENMeval_results" , full.names = T)
modfiles <- list.files("/Users/laumo791/Documents/PR/C1/Results/2022-12-07_ENMeval_results" , full.names = T)
library(rgdal)
library(raster)
library(ENMeval)
library(dplyr)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
modfiles <- list.files("Results/2022-12-07_ENMeval_results" , full.names = T)
library(ENMeval)
modfiles <- list.files("/Users/laumo791/Documents/PR/C1/Results/2022-12-07_ENMeval_results" , full.names = T)
modfiles
mod <- readRDS(modfiles[i])
for(i in seq_along(modfiles)){
mod <- readRDS(modfiles[i])
res[[i]] <- mod@results[which(mod@results$cbi.trains==max(mod@results$cbi.train))]
pred[[i]] <- mod@predictions[[which(mod@results$cbi.train==max(mod@results$cbi.train))]]
}
i=1
mod <- readRDS(modfiles[i])
mod@results
for(i in seq_along(modfiles)){
mod <- readRDS(modfiles[i])
res[[i]] <- mod@results[which(mod@results$cbi.trains==max(mod@results$cbi.train))]
pred[[i]] <- mod@predictions[[which(mod@results$cbi.train==max(mod@results$cbi.train))]]
}
res[[i]] <- mod@results[which(mod@results$cbi.trains==max(mod@results$cbi.train))]
res[[i]] <- mod@results[which(mod@results$cbi.trains==max(mod@results$cbi.train))]
res[[i]] <- mod@results[which(mod@results$cbi.train==max(mod@results$cbi.train))]
res[[i]] <- mod@results[[which(mod@results$cbi.train==max(mod@results$cbi.train))]]
max(mod@results$cbi.train)
mod@results$cbi.train)
mod@results$cbi.train
max(mod@results$cbi.train, na.rm=NA)
res[[i]] <- mod@results[[which(mod@results$cbi.train==max(mod@results$cbi.train, na.rm=NA))]]
which(mod@results$cbi.train==max(mod@results$cbi.train, na.rm=NA))
mod@results[which(mod@results$cbi.train==max(mod@results$cbi.train, na.rm=NA))]
mod@results %>% filter(delta.AICc==0)
mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
res[[i]] <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
res <- list() #this is for the results
res[[i]] <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
res
pred[[i]] <- mod@predictions %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
mod@results
mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
mod@predictions
names(mod@predictions)
res[[i]]$tune.args
which(names(mod@predictions)==res[[i]]$tune.args)
mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
####  this is what is have tried!
##here I'm only using the omission rate to try to run the loop but i could not relly make it work
for(i in seq_along(modfiles)){
mod <- readRDS(modfiles[i])
res[[i]] <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
pred[[i]] <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
}
pred <- list() # this is for the raster model results
####  this is what is have tried!
##here I'm only using the omission rate to try to run the loop but i could not relly make it work
for(i in seq_along(modfiles)){
mod <- readRDS(modfiles[i])
res[[i]] <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
pred[[i]] <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
}
pred
i=453
mod <- readRDS(modfiles[i])
mod
res[[i]] <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
res[[i]]
mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
which(names(mod@predictions)==res[[i]]$tune.args)
res[[i]]$tune.args
which(names(mod@predictions)==res[[i]]$tune.args)
names(mod@predictions)
pred[[i]] <- mod@predictions[[which(names(mod@predictions)==
as.character(res[[i]]$tune.args))]]
mod@predictions[[which(names(mod@predictions)==
as.character(res[[i]]$tune.args))]]
which(names(mod@predictions)==
as.character(res[[i]]$tune.args))]
which(names(mod@predictions)==
as.character(res[[i]]$tune.args))
as.character(res[[i]]$tune.args)
names(mod@predictions)
mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
names(mod@predictions)
mod@predictions[[14:15]]
plot(mod@predictions[[14:15]])
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
tmpres
tmpres[,1]
tmpres[1,]
pred[[i]] <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
pred[[i]]
mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
res[[i]]$tune.args
res[[i]] <- tmpres[1,]
pred[[i]] <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
pred[[i]]
####  this is what is have tried!
##here I'm only using the omission rate to try to run the loop but i could not relly make it work
for(i in seq_along(modfiles)){
print(i)
mod <- readRDS(modfiles[i])
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
res[[i]] <- tmpres[1,]
pred[[i]] <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
}
res
do.call(res, rbind)
res
do.call(rbind, res)
resall <- do.call(rbind, res)
hist(resall$auc.train)
pred
predall <- do.call(stack, pred)
predall
f-> raster("/Users/laumo791/Desktop/RDS-2023-0004 2/Data/prvi_forest_age_class/prvi_forest_age_class_2001.tif")
f <- raster("/Users/laumo791/Desktop/RDS-2023-0004 2/Data/prvi_forest_age_class/prvi_forest_age_class_2001.tif")
plot(f)
f@data@attributes[[1]]
f@data@attributes
f
projectRaster(predall[[1]], f)
library(rgdal)
library(raster)
library(ENMeval)
library(dplyr)
modfiles <- list.files("/Users/laumo791/Documents/PR/C1/Results/2022-12-07_ENMeval_results" , full.names = T)
res <- list() #this is for the results
pred <- list() # this is for the raster model results
####  this is what is have tried!
##here I'm only using the omission rate to try to run the loop but i could not relly make it work
for(i in seq_along(modfiles)){
print(i)
mod <- readRDS(modfiles[i])
tmpres <- mod@results %>%
filter(or.10p.avg == min(or.10p.avg)) %>%
filter(auc.val.avg == max(auc.val.avg))
res[[i]] <- tmpres[1,]
pred[[i]] <- mod@predictions[[which(names(mod@predictions)==res[[i]]$tune.args)]]
}
resall <- do.call(rbind, res)
hist(resall$auc.train)
predall <- do.call(stack, pred)
View(resall)
View(resall)
resall[1]
resall[65]
View(predall)
plot(predall[[3]])
resall[[4]]
focsp
#RUNNING THE MODELS
for (sp in 1:length(unique(oc$CODE))){
# This line to skip some species that dont work
if(!sp %in% c(253,387,472,515,541)){
focsp <- unique(oc$CODE)[sp]
occs <- oc[oc$CODE==focsp,2:1]
bg <- oc[oc$CODE!=focsp,2:1]
message(paste('working on', focsp))
print(Sys.time())
if(nrow(occs)>10){
if(nrow(occs)>=15){
partition <- "checkerboard2"
} else {
partition <- "jackknife"
}
# HOW ARE 'DUPLICATE' RECORDS BEING TREATED? (AS IN, OCCS IN THE SAME GRID CELL?)
mod <- ENMevaluate(occs=occs, envs=envs, bg=bg,
algorithm='maxnet',
partitions=partition,
categoricals="GEO",
partition.settings=list(aggregation.factor=c(5,5)),
tune.args=list(fc = c("L","LQ","LQH","H"), rm = 1:5))
# tune.args=list(fc = c("L","H"), rm = 1:5))
filename <- paste0("Results/2022-12-07_ENMeval_results/", focsp, ".RDA")
saveRDS(mod, file=filename)
}
}
}
# LOAD ENVIRONMENTAL PREDICTOR VARIABLES
envs <- stack(list.files("Data/Derived/envs", full.names = TRUE))
#LOAD OCCURENCES RECORD AND FILTER
load("Data/FINAL_RECS.Rdata")
#RUNNING THE MODELS
for (sp in 1:length(unique(oc$CODE))){
# This line to skip some species that dont work
if(!sp %in% c(253,387,472,515,541)){
focsp <- unique(oc$CODE)[sp]
occs <- oc[oc$CODE==focsp,2:1]
bg <- oc[oc$CODE!=focsp,2:1]
message(paste('working on', focsp))
print(Sys.time())
if(nrow(occs)>10){
if(nrow(occs)>=15){
partition <- "checkerboard2"
} else {
partition <- "jackknife"
}
# HOW ARE 'DUPLICATE' RECORDS BEING TREATED? (AS IN, OCCS IN THE SAME GRID CELL?)
mod <- ENMevaluate(occs=occs, envs=envs, bg=bg,
algorithm='maxnet',
partitions=partition,
categoricals="GEO",
partition.settings=list(aggregation.factor=c(5,5)),
tune.args=list(fc = c("L","LQ","LQH","H"), rm = 1:5))
# tune.args=list(fc = c("L","H"), rm = 1:5))
filename <- paste0("Results/2022-12-07_ENMeval_results/", focsp, ".RDA")
saveRDS(mod, file=filename)
}
}
}
#without considering the islands
GEO_ext <-raster::extract(envs[[1]], full[,c('LONGDEC','LATDEC')])
oc <- dplyr::filter(full, !is.na(GEO_ext)) #these are the cleaned occurencese
for (sp in 1:length(unique(oc$CODE)))
focsp <- unique(oc$CODE)[sp]
focsp
